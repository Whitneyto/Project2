{"version":3,"sources":["assets/imgs/logo.png","components/HeaderBar.tsx","components/QuoteBox.tsx","components/ControlQuoteButtons.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HeaderBar","className","href","src","logo","alt","QuoteBox","quote","color","QuoteItem","Author","ControlQuoteButton","setQuote","Button","variant","onClick","QUOTES","Math","floor","random","length","App","useState","seeQuote","setSeeQuote","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAAe,MAA0B,iC,OCIlC,SAASA,IACZ,OAAO,8BACH,sBAAKC,UAAU,sEAAf,UACI,oBAAGA,UAAU,eAAeC,KAAK,aAAjC,UAA8C,qBAAKC,IAAKC,EAAMC,IAAI,KAAlE,OACA,qBAAIJ,UAAU,aAAd,UACI,oBAAIA,UAAU,WAAd,SACI,mBAAGA,UAAU,WAAWC,KAAK,4CAA7B,oBAEJ,oBAAID,UAAU,WAAd,SACI,mBAAGA,UAAU,WAAWC,KAAK,IAA7B,wBAEJ,oBAAID,UAAU,WAAd,SACI,mBAAGA,UAAU,WAAWC,KAAK,IAA7B,qBAEJ,oBAAID,UAAU,WAAd,SACI,mBAAGA,UAAU,WAAWC,KAAK,IAA7B,+BChBb,SAASI,EAAT,GAAyD,IAAtCC,EAAqC,EAArCA,MACtB,OAAO,sBAAKN,UAAY,aAAaO,MAAM,uBAApC,UACH,sBAAKP,UAAY,MAAjB,cAAyBM,EAAME,UAA/B,OACA,sBAAKR,UAAY,OAAjB,eAA2BM,EAAMG,a,YCAlC,SAASC,EAAT,GAAsF,IAAzDC,EAAwD,EAAxDA,SAChC,OAAO,qBAAKX,UAAY,eAAjB,SACP,cAACY,EAAA,EAAD,CAAQZ,UAAW,eAAea,QAAQ,YAAYC,QAClD,kBAAIH,EAASI,EAAOC,KAAKC,MAAMD,KAAKE,SAAWH,EAAOI,WAD1D,8B,MCgBWC,MAff,WACE,MAAiCC,mBAAgBN,EAAOC,KAAKC,MAAMD,KAAKE,SAAWH,EAAOI,UAA1F,mBAAOG,EAAP,KAAkBC,EAAlB,KAEA,OACE,sBAAKvB,UAAU,MAAf,UACE,cAACD,EAAD,IACA,qBAAKC,UAAW,QAAhB,SACE,gEAEA,cAACK,EAAD,CAAUC,MAASgB,IACnB,cAACZ,EAAD,CAAoBC,SAAYY,QCLzBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.52b5728e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.d78796cc.png\";","\nimport logo from '../assets/imgs/logo.png';\nimport '../App.css';\n\nexport function HeaderBar(): JSX.Element {\n    return <div>\n        <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark flex-column flex-sm-row\">\n            <a className=\"navbar-brand\" href=\"index.html\"><img src={logo} alt=\"\" /> </a>\n            <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                    <a className=\"nav-link\" href=\"https://whitneyto.github.io/FirstProject/\">Home</a>\n                </li>\n                <li className=\"nav-item\">\n                    <a className=\"nav-link\" href=\"#\">Projects</a>\n                </li>\n                <li className=\"nav-item\">\n                    <a className=\"nav-link\" href=\"#\">About</a>\n                </li>\n                <li className=\"nav-item\">\n                    <a className=\"nav-link\" href=\"#\">Contact</a>\n                </li>\n            </ul>\n        </nav>\n    </div>\n}","import { Quote } from \"../interfaces/Quote\";\n\n\nexport function QuoteBox({quote} : {quote:Quote}): JSX.Element {\n    return <div className = \"quote-area\" color=\"background-color:red\">\n        <div className = \"qte\">\"{quote.QuoteItem}\"</div>\n        <div className = \"auth\">- {quote.Author}</div>      \n        </div>\n}","import '../App.css';\nimport { Button } from 'react-bootstrap';\nimport { Quote } from '../interfaces/Quote';\nimport QUOTES from '../assets/quoteList.json';\n\n\nexport function ControlQuoteButton({setQuote} : {setQuote : (q:Quote)=>void}) : JSX.Element {\n    return <div className = \"side-buttons\">\n    <Button className =\"quote-change\" variant=\"secondary\" onClick = {\n        ()=>setQuote(QUOTES[Math.floor(Math.random() * QUOTES.length)]) \n    }>Another Quote!</Button>\n</div>\n}","import React, { useState } from 'react';\nimport './App.css';\nimport QUOTES from './assets/quoteList.json';\nimport { HeaderBar} from './components/HeaderBar'\nimport { QuoteBox } from './components/QuoteBox';\nimport { ControlQuoteButton } from './components/ControlQuoteButtons';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport  {Quote} from './interfaces/Quote';\n\nfunction App() {\n  const [seeQuote , setSeeQuote] = useState<Quote>(QUOTES[Math.floor(Math.random() * QUOTES.length)])\n\n  return (\n    <div className=\"App\">\n      <HeaderBar></HeaderBar>\n      <div className =\"title\">\n        <h1>Random Motivational Quote!!!</h1>        \n      </div>\n        <QuoteBox quote = {seeQuote}></QuoteBox>\n        <ControlQuoteButton setQuote = {setSeeQuote}></ControlQuoteButton>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}